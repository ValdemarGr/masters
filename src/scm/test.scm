(define main ((lambda (Node) ((lambda (Tnil) ((lambda (Nil) ((lambda (Cons) ((lambda (main) ((lambda (treesum) ((lambda (insert) ((lambda (add) ((lambda (range) ((lambda (foldl) ((((((main treesum) range) main) insert) foldl) add)) (lambda (treesum) (lambda (range) (lambda (main) (lambda (insert) (lambda (foldl) (lambda (add) (lambda (f) (lambda (a) (lambda (l) ((l (lambda (xs) (lambda (x) (((((((((foldl treesum) range) main) insert) foldl) add) f) ((f a) x)) xs)))) a)))))))))))) (lambda (treesum) (lambda (range) (lambda (main) (lambda (insert) (lambda (foldl) (lambda (add) (lambda (n) (if (= n 0) ((((((Nil treesum) range) main) insert) foldl) add) ((((((((Cons treesum) range) main) insert) foldl) add) n) (((((((range treesum) range) main) insert) foldl) add) (- n 1))))))))))))) (lambda (treesum) (lambda (range) (lambda (main) (lambda (insert) (lambda (foldl) (lambda (add) (lambda (a) (lambda (b) (+ a b))))))))))) (lambda (treesum) (lambda (range) (lambda (main) (lambda (insert) (lambda (foldl) (lambda (add) (lambda (t) (lambda (a) ((t (((((((((Node treesum) range) main) insert) foldl) add) ((((((Tnil treesum) range) main) insert) foldl) add)) a) ((((((Tnil treesum) range) main) insert) foldl) add))) (lambda (r) (lambda (x) (lambda (l) (if (> x a) (((((((((Node treesum) range) main) insert) foldl) add) ((((((((insert treesum) range) main) insert) foldl) add) l) a)) x) r) (((((((((Node treesum) range) main) insert) foldl) add) l) x) ((((((((insert treesum) range) main) insert) foldl) add) r) a))))))))))))))))) (lambda (treesum) (lambda (range) (lambda (main) (lambda (insert) (lambda (foldl) (lambda (add) (lambda (t) ((t 0) (lambda (r) (lambda (x) (lambda (l) (+ (+ (((((((treesum treesum) range) main) insert) foldl) add) l) x) (((((((treesum treesum) range) main) insert) foldl) add) r))))))))))))))) (lambda (treesum) (lambda (range) (lambda (main) (lambda (insert) (lambda (foldl) (lambda (add) ((lambda (t) (((((((treesum treesum) range) main) insert) foldl) add) t)) ((((((((insert treesum) range) main) insert) foldl) add) ((((((((insert treesum) range) main) insert) foldl) add) ((((((((insert treesum) range) main) insert) foldl) add) ((((((Tnil treesum) range) main) insert) foldl) add)) 10)) 20)) 5)))))))))) (lambda (treesum) (lambda (range) (lambda (main) (lambda (insert) (lambda (foldl) (lambda (add) (lambda (a_0) (lambda (List_1) (lambda (Cons) (lambda (Nil) ((Cons List_1) a_0))))))))))))) (lambda (treesum) (lambda (range) (lambda (main) (lambda (insert) (lambda (foldl) (lambda (add) (lambda (Cons) (lambda (Nil) Nil)))))))))) (lambda (treesum) (lambda (range) (lambda (main) (lambda (insert) (lambda (foldl) (lambda (add) (lambda (Tnil) (lambda (Node) Tnil)))))))))) (lambda (treesum) (lambda (range) (lambda (main) (lambda (insert) (lambda (foldl) (lambda (add) (lambda (Tree_0) (lambda (a_1) (lambda (Tree_2) (lambda (Tnil) (lambda (Node) (((Node Tree_2) a_1) Tree_0))))))))))))))
(display main)
